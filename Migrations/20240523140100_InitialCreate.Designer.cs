// <auto-generated />
using System;
using JobSearchPortal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobSearchPortal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240523140100_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("JobSearchPortal.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ApplicationCloseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PositionEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PositionID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PositionStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PositionTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PositionURI")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("QualificationSummary")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("JobSearchPortal.Models.JobCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("JobCategories");
                });

            modelBuilder.Entity("JobSearchPortal.Models.JobGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("JobGrades");
                });

            modelBuilder.Entity("JobSearchPortal.Models.PositionLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CountrySubdivisionCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("PositionLocations");
                });

            modelBuilder.Entity("JobSearchPortal.Models.PositionOfferingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("PositionOfferingTypes");
                });

            modelBuilder.Entity("JobSearchPortal.Models.PositionRemuneration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("MaximumRange")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MinimumRange")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("PositionRemunerations");
                });

            modelBuilder.Entity("JobSearchPortal.Models.PositionSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("PositionSchedules");
                });

            modelBuilder.Entity("JobSearchPortal.Models.JobCategory", b =>
                {
                    b.HasOne("JobSearchPortal.Models.Job", "Job")
                        .WithMany("JobCategories")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("JobSearchPortal.Models.JobGrade", b =>
                {
                    b.HasOne("JobSearchPortal.Models.Job", "Job")
                        .WithMany("JobGrades")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("JobSearchPortal.Models.PositionLocation", b =>
                {
                    b.HasOne("JobSearchPortal.Models.Job", "Job")
                        .WithMany("PositionLocations")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("JobSearchPortal.Models.PositionOfferingType", b =>
                {
                    b.HasOne("JobSearchPortal.Models.Job", "Job")
                        .WithMany("PositionOfferingTypes")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("JobSearchPortal.Models.PositionRemuneration", b =>
                {
                    b.HasOne("JobSearchPortal.Models.Job", "Job")
                        .WithMany("PositionRemunerations")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("JobSearchPortal.Models.PositionSchedule", b =>
                {
                    b.HasOne("JobSearchPortal.Models.Job", "Job")
                        .WithMany("PositionSchedules")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("JobSearchPortal.Models.Job", b =>
                {
                    b.Navigation("JobCategories");

                    b.Navigation("JobGrades");

                    b.Navigation("PositionLocations");

                    b.Navigation("PositionOfferingTypes");

                    b.Navigation("PositionRemunerations");

                    b.Navigation("PositionSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
